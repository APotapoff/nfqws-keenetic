#!/bin/sh

CONFDIR=/opt/etc/nfqws
CONFFILE=$CONFDIR/nfqws.conf
LISTFILE=$CONFDIR/user.list
LISTAUTOFILE=$CONFDIR/auto.list
LISTEXCLUDEFILE=$CONFDIR/exclude.list
LISTLOG=/opt/var/log/nfqws.log
INIT_SCRIPT=/opt/etc/init.d/S51nfqws

install_binary_func() {
  ARCH=$(cat /opt/etc/opkg.conf | grep -oE 'mips-3|mipsel-3|aarch64-3|armv7' | head -n 1)
  case "$ARCH" in
    "mips-3") ARCH="mips" ;;
    "mipsel-3") ARCH="mipsel" ;;
    "aarch64-3") ARCH="aarch64" ;;
    "armv7") ARCH="armv7" ;;
  esac

  if [ -z $ARCH ]; then
    echo "Failed to detect architecture"
    exit 1
  fi
  echo "Detected arch: $ARCH"

  cp -f "/tmp/nfqws_binary/nfqws-$ARCH" "/opt/usr/bin/nfqws"
  chmod +x /opt/usr/bin/nfqws
  rm -rf /tmp/nfqws_binary
}

stop_func() {
  if [ -f "$INIT_SCRIPT" ]; then
    $INIT_SCRIPT stop
  fi
}

start_func() {
  if [ -f "$INIT_SCRIPT" ]; then
    $INIT_SCRIPT start
  fi
}

show_interfaces_func() {
  echo -e "\n----------------------"
  ip addr show | awk -F" |/" '{gsub(/^ +/,"")}/inet /{print $(NF), $2}'
}

config_interface_func() {
  if [ -z "$BIND_IFACE" ]; then
    echo -e "\nEnter the provider interface name from the list above, e.g. eth3 (default) or nwg1"
    echo "You can specify multiple interfaces separated by space, e.g. eth3 nwg1"
    read BIND_IFACE
  fi
  if [ -z "$BIND_IFACE" ]; then
    BIND_IFACE="eth3"
  fi
  echo "Selected interface: $BIND_IFACE"

  sed -i "s#INPUT_ISP_INTERFACE#$BIND_IFACE#" $CONFFILE
}

config_select_mode_func() {
  if [ -z "$MODE" ]; then
    echo -e "\nSelect working mode: auto (default), list, all"
    echo "  auto - automatically detects blocked resources and adds them to the list"
    echo "  list - applies rules only to domains in the list $LISTFILE"
    echo "  all  - applies rules to all traffic except domains from list $LISTEXCLUDEFILE"
    read MODE
  fi

  if [ "$MODE" == "list" ]; then
    EXTRA_ARGS="--hostlist=$LISTFILE"
  elif [ "$MODE" == "all" ]; then
    EXTRA_ARGS="--hostlist-exclude=$LISTEXCLUDEFILE"
  else
    MODE="auto"
    EXTRA_ARGS="--hostlist=$LISTFILE --hostlist-auto=$LISTAUTOFILE --hostlist-auto-debug=$LISTLOG --hostlist-exclude=$LISTEXCLUDEFILE"
  fi
  echo "Selected mode: $MODE"

  sed -i "s#INPUT_EXTRA_ARGS#$EXTRA_ARGS#" $CONFFILE
}

config_ipv6_func() {
  echo -e "\nDisable IPv6 support (enabled by default)? y/N"
  read yn
  case $yn in
    [Yy]* )
      sed -i "s#IPV6_ENABLED=1#IPV6_ENABLED=0#" $CONFFILE
      ;;
  esac
}

# Stop service if exist
stop_func

# Install binary
install_binary_func

NFQWS_INSTALL_TYPE="install"
if [ -f "/tmp/nfqws_install_type" ]; then
  # Set in preinst script
  NFQWS_INSTALL_TYPE=$(cat "/tmp/nfqws_install_type")
  rm -f /tmp/nfqws_install_type
fi

case "$NFQWS_INSTALL_TYPE" in
  install)
    # Setup ISP interface
    show_interfaces_func
    config_interface_func

    # Setup working mode
    config_select_mode_func

    # Setup IPv6 support
    config_ipv6_func

    echo "Installation successful"
    ;;
  *)
    # Do nothing
    ;;
esac

# Starting Services
start_func

exit 0
